{$assertions on}

type
  TPoint = record
    x, y: Integer;
  end;
  TPointArray = array of TPoint;

operator <(l,r: TPoint): Boolean;
begin
  Result := (l.x >= r.x) and (l.x >= r.x);
end;

operator >(l,r: TPoint): Boolean;
begin
  Result := (l.x <= r.x) and (l.x <= r.x);
end;

operator /(l: TPoint; r: Double): TPoint;
begin
  Result.x := Round(l.x / r);
  Result.y := Round(l.y / r);
end;

operator +(l,r: TPoint): TPoint;
begin
  Result.x := l.x+r.x;
  Result.y := l.y+r.y;
end;

operator -(l,r: TPoint): TPoint;
begin
  Result.x := l.x-r.x;
  Result.y := l.y-r.y;
end;

var
  Arr: array of Int32 = [1,3,4,1,1,1,5,5,6,10];
  Points: TPointArray = [[1,1],[4,4],[6,6],[10,10]];
begin
  Assert(ArrayMedian(Arr) = 3.5);
  Assert(ArrayMedian(Points) = [5, 5]);

  Delete(Arr, 0, 1);

  Assert(ArrayMedian(Arr) = 4);
end;