{$assertions on}

type
  TPoint = record X, Y: Int32; end;
  TPointArray = array of TPoint;

operator < (l,r:TPoint): Boolean;
begin
  Result := Int64(l) < Int64(r);
end;

operator > (l,r:TPoint): Boolean;
begin
  Result := Int64(l) > Int64(r);
end;

var
  TPA: TPointArray;
  Arr: TIntegerArray;
begin
  TPA := [];
  Assert(ArrayMode(TPA)=[0,0]);
  TPA := [[5,5],[5,5],[1,1],[5,5],[1,1],[4,4],[1,1],[1,1],[5,5],[5,5],[-1,-1]];
  Assert(ArrayMode(TPA)=[5,5]);

  Arr := [];
  Assert(ArrayMode(Arr)=0);
  Arr := [1];
  Assert(ArrayMode(Arr)=1);
  Arr := [0,1,0];
  Assert(ArrayMode(Arr)=0);
  Arr := [1,1,1,0,0];
  Assert(ArrayMode(Arr)=1);
  Arr := [1,1,1,0,0,0,0];
  Assert(ArrayMode(Arr)=0);
  Arr := [1,1,2,2,2,2,4,4,1,1,2,4,4];
  Assert(ArrayMode(Arr)=2);
end;